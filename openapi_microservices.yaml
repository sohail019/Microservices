swagger: "2.0"
info:
  title: Microservices
  version: "1.0"

schemes:
  - http

paths:
  /api/payments:
    get:
      summary: Get All Payments
      responses:
        "200":
          description: Successful response
      x-amazon-apigateway-integration:
        uri: http://ec2-54-165-176-226.compute-1.amazonaws.com:3006/api/payments
        httpMethod: GET
        type: http_proxy
        passthroughBehavior: when_no_match
    post:
      summary: Create Payment
      consumes:
        - application/json
      parameters:
        - in: body
          name: payment
          required: true
          schema:
            type: object
            properties:
              orderId:
                type: string
              amount:
                type: number
              method:
                type: string
              status:
                type: string
      responses:
        "201":
          description: Payment created successfully
      x-amazon-apigateway-integration:
        uri: http://ec2-54-165-176-226.compute-1.amazonaws.com:3006/api/payments
        httpMethod: POST
        type: http_proxy
        passthroughBehavior: when_no_match

  /api/payments/{id}:
    get:
      summary: Get Payment by ID
      parameters:
        - name: id
          in: path
          required: true
          type: string
      responses:
        "200":
          description: Successful response
      x-amazon-apigateway-integration:
        uri: http://ec2-54-165-176-226.compute-1.amazonaws.com:3006/api/payments/{id}
        httpMethod: GET
        requestParameters:
          integration.request.path.id: method.request.path.id
        type: http_proxy
        passthroughBehavior: when_no_match

  /api/payments/webhook:
    post:
      summary: Payment Webhook Handler
      consumes:
        - application/json
      parameters:
        - in: body
          name: webhook
          required: true
          schema:
            type: object
      responses:
        "200":
          description: Webhook processed successfully
      x-amazon-apigateway-integration:
        uri: http://ec2-54-165-176-226.compute-1.amazonaws.com:3006/api/payments/webhook
        httpMethod: POST
        type: http_proxy
        passthroughBehavior: when_no_match
  /api/cart:
    get:
      summary: Get User Cart
      responses:
        "200":
          description: Successful response
      x-amazon-apigateway-integration:
        uri: http://ec2-3-233-43-35.compute-1.amazonaws.com:3004/api/cart
        httpMethod: GET
        type: http_proxy
        passthroughBehavior: when_no_match
    delete:
      summary: Clear Cart
      responses:
        "200":
          description: Successful response
      x-amazon-apigateway-integration:
        uri: http://ec2-3-233-43-35.compute-1.amazonaws.com:3004/api/cart
        httpMethod: DELETE
        type: http_proxy
        passthroughBehavior: when_no_match

  /api/cart/getMyCartWithProducts:
    get:
      summary: Get My Cart with Product Details
      responses:
        "200":
          description: Successful response
      x-amazon-apigateway-integration:
        uri: http://ec2-3-233-43-35.compute-1.amazonaws.com:3004/api/cart/getMyCartWithProducts
        httpMethod: GET
        type: http_proxy
        passthroughBehavior: when_no_match

  /api/cart/{id}/getCartWithProducts:
    get:
      summary: Get Cart by ID with Product Details
      parameters:
        - name: id
          in: path
          required: true
          type: string
      responses:
        "200":
          description: Successful response
      x-amazon-apigateway-integration:
        uri: http://ec2-3-233-43-35.compute-1.amazonaws.com:3004/api/cart/{id}/getCartWithProducts
        httpMethod: GET
        requestParameters:
          integration.request.path.id: method.request.path.id
        type: http_proxy
        passthroughBehavior: when_no_match

  /api/cart/items:
    post:
      summary: Add Item to Cart
      consumes:
        - application/json
      parameters:
        - in: body
          name: item
          required: true
          schema:
            type: object
            properties:
              productId:
                type: string
              quantity:
                type: integer
      responses:
        "200":
          description: Successful response
      x-amazon-apigateway-integration:
        uri: http://ec2-3-233-43-35.compute-1.amazonaws.com:3004/api/cart/items
        httpMethod: POST
        type: http_proxy
        passthroughBehavior: when_no_match

  /api/cart/items/updateCartItem/{id}:
    put:
      summary: Update Cart Item
      consumes:
        - application/json
      parameters:
        - name: id
          in: path
          required: true
          type: string
        - in: body
          name: item
          required: true
          schema:
            type: object
            properties:
              quantity:
                type: integer
      responses:
        "200":
          description: Successful response
      x-amazon-apigateway-integration:
        uri: http://ec2-3-233-43-35.compute-1.amazonaws.com:3004/api/cart/items/updateCartItem/{id}
        httpMethod: PUT
        requestParameters:
          integration.request.path.id: method.request.path.id
        type: http_proxy
        passthroughBehavior: when_no_match

  /api/cart/items/removeFromCart/{id}:
    delete:
      summary: Remove Item From Cart
      parameters:
        - name: id
          in: path
          required: true
          type: string
      responses:
        "200":
          description: Successful response
      x-amazon-apigateway-integration:
        uri: http://ec2-3-233-43-35.compute-1.amazonaws.com:3004/api/cart/items/removeFromCart/{id}
        httpMethod: DELETE
        requestParameters:
          integration.request.path.id: method.request.path.id
        type: http_proxy
        passthroughBehavior: when_no_match

  /api/orders/create:
    post:
      summary: Create Order
      consumes:
        - application/json
      parameters:
        - in: body
          name: order
          required: true
          schema:
            type: object
            properties:
              items:
                type: array
                items:
                  type: object
                  properties:
                    productId:
                      type: string
                    quantity:
                      type: integer
              discountAmount:
                type: number
              discountType:
                type: string
              gstNumber:
                type: string
              currency:
                type: string
      responses:
        "200":
          description: Successful response
      x-amazon-apigateway-integration:
        uri: http://ec2-98-83-192-35.compute-1.amazonaws.com:3005/api/orders/create
        httpMethod: POST
        type: http_proxy
        passthroughBehavior: when_no_match

  /api/payments/initiate:
    post:
      summary: Initiate Payment
      consumes:
        - application/json
      parameters:
        - in: body
          name: payment
          required: true
          schema:
            type: object
            properties:
              orderId:
                type: string
              method:
                type: string
              gateway:
                type: string
              paymentType:
                type: string
              currency:
                type: string
              returnUrl:
                type: string
      responses:
        "200":
          description: Successful response
      x-amazon-apigateway-integration:
        uri: http://ec2-54-165-176-226.compute-1.amazonaws.com:3006/api/payments/initiate
        httpMethod: POST
        type: http_proxy
        passthroughBehavior: when_no_match

  /api/orders/{orderId}/status:
    patch:
      summary: Update Order Status
      consumes:
        - application/json
      parameters:
        - name: orderId
          in: path
          required: true
          type: string
        - in: body
          name: statusUpdate
          required: true
          schema:
            type: object
            properties:
              status:
                type: string
              comment:
                type: string
      responses:
        "200":
          description: Successful response
      x-amazon-apigateway-integration:
        uri: http://ec2-98-83-192-35.compute-1.amazonaws.com:3005/api/orders/{orderId}/status
        httpMethod: PATCH
        requestParameters:
          integration.request.path.orderId: method.request.path.orderId
        type: http_proxy
        passthroughBehavior: when_no_match

  /api/orders/{orderId}/cancel:
    patch:
      summary: Cancel Order
      consumes:
        - application/json
      parameters:
        - name: orderId
          in: path
          required: true
          type: string
        - in: body
          name: cancelRequest
          required: true
          schema:
            type: object
            properties:
              reason:
                type: string
      responses:
        "200":
          description: Successful response
      x-amazon-apigateway-integration:
        uri: http://ec2-98-83-192-35.compute-1.amazonaws.com:3005/api/orders/{orderId}/cancel
        httpMethod: PATCH
        requestParameters:
          integration.request.path.orderId: method.request.path.orderId
        type: http_proxy
        passthroughBehavior: when_no_match

  /api/orders/{orderId}/items/{itemId}/cancel:
    patch:
      summary: Cancel Order Item
      consumes:
        - application/json
      parameters:
        - name: orderId
          in: path
          required: true
          type: string
        - name: itemId
          in: path
          required: true
          type: string
        - in: body
          name: cancelRequest
          required: true
          schema:
            type: object
            properties:
              reason:
                type: string
      responses:
        "200":
          description: Successful response
      x-amazon-apigateway-integration:
        uri: http://ec2-98-83-192-35.compute-1.amazonaws.com:3005/api/orders/{orderId}/items/{itemId}/cancel
        httpMethod: PATCH
        requestParameters:
          integration.request.path.orderId: method.request.path.orderId
          integration.request.path.itemId: method.request.path.itemId
        type: http_proxy
        passthroughBehavior: when_no_match

  /api/orders/{orderId}/discount:
    post:
      summary: Apply Discount
      consumes:
        - application/json
      parameters:
        - name: orderId
          in: path
          required: true
          type: string
        - in: body
          name: discount
          required: true
          schema:
            type: object
            properties:
              discountAmount:
                type: number
              discountType:
                type: string
      responses:
        "200":
          description: Successful response
      x-amazon-apigateway-integration:
        uri: http://ec2-98-83-192-35.compute-1.amazonaws.com:3005/api/orders/{orderId}/discount
        httpMethod: POST
        requestParameters:
          integration.request.path.orderId: method.request.path.orderId
        type: http_proxy
        passthroughBehavior: when_no_match

  /api/orders/{orderId}/items/{itemId}:
    patch:
      summary: Update Order Item
      consumes:
        - application/json
      parameters:
        - name: orderId
          in: path
          required: true
          type: string
        - name: itemId
          in: path
          required: true
          type: string
        - in: body
          name: itemUpdate
          required: true
          schema:
            type: object
            properties:
              quantity:
                type: integer
              status:
                type: string
      responses:
        "200":
          description: Successful response
      x-amazon-apigateway-integration:
        uri: http://ec2-98-83-192-35.compute-1.amazonaws.com:3005/api/orders/{orderId}/items/{itemId}
        httpMethod: PATCH
        requestParameters:
          integration.request.path.orderId: method.request.path.orderId
          integration.request.path.itemId: method.request.path.itemId
        type: http_proxy
        passthroughBehavior: when_no_match

  /api/orders/seed-orders:
    post:
      summary: Seed Orders
      consumes:
        - application/json
      parameters:
        - in: body
          name: seed
          required: true
          schema:
            type: object
            properties:
              count:
                type: integer
      responses:
        "200":
          description: Successful response
      x-amazon-apigateway-integration:
        uri: http://ec2-98-83-192-35.compute-1.amazonaws.com:3005/api/orders/seed-orders
        httpMethod: POST
        type: http_proxy
        passthroughBehavior: when_no_match

  /api/orders/getAllOrders:
    get:
      summary: Get All Orders
      responses:
        "200":
          description: Successful response
      x-amazon-apigateway-integration:
        uri: http://ec2-98-83-192-35.compute-1.amazonaws.com:3005/api/orders/getAllOrders
        httpMethod: GET
        type: http_proxy
        passthroughBehavior: when_no_match

  /api/orders/user/{userId}:
    get:
      summary: Get User Orders
      parameters:
        - name: userId
          in: path
          required: true
          type: string
      responses:
        "200":
          description: Successful response
      x-amazon-apigateway-integration:
        uri: http://ec2-98-83-192-35.compute-1.amazonaws.com:3005/api/orders/user/{userId}
        httpMethod: GET
        requestParameters:
          integration.request.path.userId: method.request.path.userId
        type: http_proxy
        passthroughBehavior: when_no_match

  /api/orders/{orderId}/details:
    get:
      summary: Get Order Details
      parameters:
        - name: orderId
          in: path
          required: true
          type: string
      responses:
        "200":
          description: Successful response
      x-amazon-apigateway-integration:
        uri: http://ec2-98-83-192-35.compute-1.amazonaws.com:3005/api/orders/{orderId}/details
        httpMethod: GET
        requestParameters:
          integration.request.path.orderId: method.request.path.orderId
        type: http_proxy
        passthroughBehavior: when_no_match

  /api/payments/seed:
    post:
      summary: Seed Payment
      consumes:
        - application/json
      parameters:
        - in: body
          name: seed
          required: true
          schema:
            type: object
            properties:
              count:
                type: integer
      responses:
        "200":
          description: Successful response
      x-amazon-apigateway-integration:
        uri: http://ec2-54-165-176-226.compute-1.amazonaws.com:3006/api/payments/seed
        httpMethod: POST
        type: http_proxy
        passthroughBehavior: when_no_match

  /api/payments/order/{orderId}:
    get:
      summary: Get Payments with Order ID
      parameters:
        - name: orderId
          in: path
          required: true
          type: string
      responses:
        "200":
          description: Successful response
      x-amazon-apigateway-integration:
        uri: http://ec2-54-165-176-226.compute-1.amazonaws.com:3006/api/payments/order/{orderId}
        httpMethod: GET
        requestParameters:
          integration.request.path.orderId: method.request.path.orderId
        type: http_proxy
        passthroughBehavior: when_no_match

  /api/payments/user/{userId}:
    get:
      summary: Get Payments with User ID
      parameters:
        - name: userId
          in: path
          required: true
          type: string
      responses:
        "200":
          description: Successful response
      x-amazon-apigateway-integration:
        uri: http://ec2-54-165-176-226.compute-1.amazonaws.com:3006/api/payments/user/{userId}
        httpMethod: GET
        requestParameters:
          integration.request.path.userId: method.request.path.userId
        type: http_proxy
        passthroughBehavior: when_no_match

  /api/payments/me:
    get:
      summary: Get Current User's Payments
      responses:
        "200":
          description: Successful response
      x-amazon-apigateway-integration:
        uri: http://ec2-54-165-176-226.compute-1.amazonaws.com:3006/api/payments/me
        httpMethod: GET
        type: http_proxy
        passthroughBehavior: when_no_match

  /api/payments/{paymentId}/refund:
    post:
      summary: Refund Payment
      consumes:
        - application/json
      parameters:
        - name: paymentId
          in: path
          required: true
          type: string
        - in: body
          name: refund
          required: true
          schema:
            type: object
            properties:
              amount:
                type: number
              reason:
                type: string
      responses:
        "200":
          description: Successful response
      x-amazon-apigateway-integration:
        uri: http://ec2-54-165-176-226.compute-1.amazonaws.com:3006/api/payments/{paymentId}/refund
        httpMethod: POST
        requestParameters:
          integration.request.path.paymentId: method.request.path.paymentId
        type: http_proxy
        passthroughBehavior: when_no_match

  /api/cart/items/{id}/save-for-later:
    post:
      summary: Save Item For Later
      parameters:
        - name: id
          in: path
          required: true
          type: string
      responses:
        "200":
          description: Successful response
      x-amazon-apigateway-integration:
        uri: http://ec2-3-233-43-35.compute-1.amazonaws.com:3004/api/cart/items/{id}/save-for-later
        httpMethod: POST
        requestParameters:
          integration.request.path.id: method.request.path.id
        type: http_proxy
        passthroughBehavior: when_no_match

  /api/cart/items/{id}/move-to-cart:
    post:
      summary: Move Item To Cart
      parameters:
        - name: id
          in: path
          required: true
          type: string
      responses:
        "200":
          description: Successful response
      x-amazon-apigateway-integration:
        uri: http://ec2-3-233-43-35.compute-1.amazonaws.com:3004/api/cart/items/{id}/move-to-cart
        httpMethod: POST
        requestParameters:
          integration.request.path.id: method.request.path.id
        type: http_proxy
        passthroughBehavior: when_no_match

  # Auth Service Endpoints
  /api/auth/register:
    post:
      summary: Register a new user
      consumes:
        - application/json
      parameters:
        - in: body
          name: user
          required: true
          schema:
            type: object
            properties:
              email:
                type: string
              password:
                type: string
              name:
                type: string
      responses:
        "201":
          description: User registered successfully
      x-amazon-apigateway-integration:
        uri: http://ec2-107-20-162-76.compute-1.amazonaws.com:3001/api/auth/register
        httpMethod: POST
        type: http_proxy
        passthroughBehavior: when_no_match

  /api/auth/login:
    post:
      summary: Login
      consumes:
        - application/json
      parameters:
        - in: body
          name: credentials
          required: true
          schema:
            type: object
            properties:
              email:
                type: string
              password:
                type: string
      responses:
        "200":
          description: Login successful
      x-amazon-apigateway-integration:
        uri: http://ec2-107-20-162-76.compute-1.amazonaws.com:3001/api/auth/login
        httpMethod: POST
        type: http_proxy
        passthroughBehavior: when_no_match

  /api/auth/refresh-token:
    post:
      summary: Refresh Token
      consumes:
        - application/json
      parameters:
        - in: body
          name: token
          required: true
          schema:
            type: object
            properties:
              refreshToken:
                type: string
      responses:
        "200":
          description: Token refreshed successfully
      x-amazon-apigateway-integration:
        uri: http://ec2-107-20-162-76.compute-1.amazonaws.com:3001/api/auth/refresh-token
        httpMethod: POST
        type: http_proxy
        passthroughBehavior: when_no_match

  /api/auth/status:
    get:
      summary: Get Auth Status
      responses:
        "200":
          description: Successful response
      x-amazon-apigateway-integration:
        uri: http://ec2-107-20-162-76.compute-1.amazonaws.com:3001/api/auth/status
        httpMethod: GET
        type: http_proxy
        passthroughBehavior: when_no_match

  /api/auth/oauth/login:
    post:
      summary: OAuth Login
      consumes:
        - application/json
      parameters:
        - in: body
          name: oauthData
          required: true
          schema:
            type: object
            properties:
              provider:
                type: string
                enum: [google, facebook, github]
              token:
                type: string
      responses:
        "200":
          description: OAuth login successful
      x-amazon-apigateway-integration:
        uri: http://ec2-107-20-162-76.compute-1.amazonaws.com:3001/api/auth/oauth/login
        httpMethod: POST
        type: http_proxy
        passthroughBehavior: when_no_match

  /api/auth/verify-email:
    post:
      summary: Verify Email
      consumes:
        - application/json
      parameters:
        - in: body
          name: verificationData
          required: true
          schema:
            type: object
            properties:
              token:
                type: string
      responses:
        "200":
          description: Email verified successfully
      x-amazon-apigateway-integration:
        uri: http://ec2-107-20-162-76.compute-1.amazonaws.com:3001/api/auth/verify-email
        httpMethod: POST
        type: http_proxy
        passthroughBehavior: when_no_match

  /api/auth/resend-verification:
    post:
      summary: Resend Verification Email
      consumes:
        - application/json
      parameters:
        - in: body
          name: emailData
          required: true
          schema:
            type: object
            properties:
              email:
                type: string
      responses:
        "200":
          description: Verification email sent successfully
      x-amazon-apigateway-integration:
        uri: http://ec2-107-20-162-76.compute-1.amazonaws.com:3001/api/auth/resend-verification
        httpMethod: POST
        type: http_proxy
        passthroughBehavior: when_no_match

  /api/auth/validate-token:
    post:
      summary: Validate Token
      consumes:
        - application/json
      parameters:
        - in: body
          name: tokenData
          schema:
            type: object
      responses:
        "200":
          description: Token validated successfully
      x-amazon-apigateway-integration:
        uri: http://ec2-107-20-162-76.compute-1.amazonaws.com:3001/api/auth/validate-token
        httpMethod: POST
        type: http_proxy
        passthroughBehavior: when_no_match

  /api/auth/logout:
    post:
      summary: Logout
      consumes:
        - application/json
      responses:
        "200":
          description: Logged out successfully
      security:
        - Bearer: []
      x-amazon-apigateway-integration:
        uri: http://ec2-107-20-162-76.compute-1.amazonaws.com:3001/api/auth/logout
        httpMethod: POST
        type: http_proxy
        passthroughBehavior: when_no_match

  # User Management Service Endpoints
  /api/users:
    get:
      summary: Get All Users
      responses:
        "200":
          description: Successful response
      x-amazon-apigateway-integration:
        uri: http://ec2-23-21-140-204.compute-1.amazonaws.com:3002/api/users
        httpMethod: GET
        type: http_proxy
        passthroughBehavior: when_no_match
    post:
      summary: Create User
      consumes:
        - application/json
      parameters:
        - in: body
          name: user
          required: true
          schema:
            type: object
            properties:
              authId:
                type: string
              fullName:
                type: string
              email:
                type: string
              phone:
                type: string
              profileImage:
                type: string
              dateOfBirth:
                type: string
              address:
                type: object
                properties:
                  street:
                    type: string
                  city:
                    type: string
                  state:
                    type: string
                  postalCode:
                    type: string
                  country:
                    type: string
              preferences:
                type: object
                properties:
                  theme:
                    type: string
                  language:
                    type: string
                  notifications:
                    type: boolean
      responses:
        "201":
          description: User created successfully
      x-amazon-apigateway-integration:
        uri: http://ec2-23-21-140-204.compute-1.amazonaws.com:3002/api/users
        httpMethod: POST
        type: http_proxy
        passthroughBehavior: when_no_match

  /api/users/auth/{authId}:
    get:
      summary: Get User By Auth ID
      parameters:
        - name: authId
          in: path
          required: true
          type: string
      responses:
        "200":
          description: Successful response
      x-amazon-apigateway-integration:
        uri: http://ec2-23-21-140-204.compute-1.amazonaws.com:3002/api/users/auth/{authId}
        httpMethod: GET
        requestParameters:
          integration.request.path.authId: method.request.path.authId
        type: http_proxy
        passthroughBehavior: when_no_match

  /api/users/me:
    get:
      summary: Get Current User Profile
      responses:
        "200":
          description: Successful response
      x-amazon-apigateway-integration:
        uri: http://ec2-23-21-140-204.compute-1.amazonaws.com:3002/api/users/me
        httpMethod: GET
        type: http_proxy
        passthroughBehavior: when_no_match

  /api/users/{id}:
    delete:
      summary: Delete User
      parameters:
        - name: id
          in: path
          required: true
          type: string
      responses:
        "200":
          description: User deleted successfully
      x-amazon-apigateway-integration:
        uri: http://ec2-23-21-140-204.compute-1.amazonaws.com:3002/api/users/{id}
        httpMethod: DELETE
        requestParameters:
          integration.request.path.id: method.request.path.id
        type: http_proxy
        passthroughBehavior: when_no_match

  # Product Service Endpoints
  /api/products/seeding:
    post:
      summary: Seed Products
      consumes:
        - application/json
      parameters:
        - in: body
          name: seed
          required: true
          schema:
            type: object
            properties:
              count:
                type: integer
      responses:
        "200":
          description: Products seeded successfully
      x-amazon-apigateway-integration:
        uri: http://ec2-44-193-67-192.compute-1.amazonaws.com:3003/api/products/seeding
        httpMethod: POST
        type: http_proxy
        passthroughBehavior: when_no_match

  /api/products/getAll:
    get:
      summary: Get All Products
      responses:
        "200":
          description: Successful response
      x-amazon-apigateway-integration:
        uri: http://ec2-44-193-67-192.compute-1.amazonaws.com:3003/api/products/getAll
        httpMethod: GET
        type: http_proxy
        passthroughBehavior: when_no_match

  /api/products/search:
    get:
      summary: Search Products
      parameters:
        - name: q
          in: query
          required: true
          type: string
      responses:
        "200":
          description: Successful response
      x-amazon-apigateway-integration:
        uri: http://ec2-44-193-67-192.compute-1.amazonaws.com:3003/api/products/search
        httpMethod: GET
        requestParameters:
          integration.request.querystring.q: method.request.querystring.q
        type: http_proxy
        passthroughBehavior: when_no_match

  /api/products/{id}:
    get:
      summary: Get Product By ID
      parameters:
        - name: id
          in: path
          required: true
          type: string
      responses:
        "200":
          description: Successful response
      x-amazon-apigateway-integration:
        uri: http://ec2-44-193-67-192.compute-1.amazonaws.com:3003/api/products/{id}
        httpMethod: GET
        requestParameters:
          integration.request.path.id: method.request.path.id
        type: http_proxy
        passthroughBehavior: when_no_match
    patch:
      summary: Update Product By ID
      parameters:
        - name: id
          in: path
          required: true
          type: string
        - in: body
          name: product
          required: true
          schema:
            type: object
      responses:
        "200":
          description: Product updated successfully
      x-amazon-apigateway-integration:
        uri: http://ec2-44-193-67-192.compute-1.amazonaws.com:3003/api/products/{id}
        httpMethod: PATCH
        requestParameters:
          integration.request.path.id: method.request.path.id
        type: http_proxy
        passthroughBehavior: when_no_match
    delete:
      summary: Delete Product By ID
      parameters:
        - name: id
          in: path
          required: true
          type: string
      responses:
        "200":
          description: Product deleted successfully
      x-amazon-apigateway-integration:
        uri: http://ec2-44-193-67-192.compute-1.amazonaws.com:3003/api/products/{id}
        httpMethod: DELETE
        requestParameters:
          integration.request.path.id: method.request.path.id
        type: http_proxy
        passthroughBehavior: when_no_match

  /api/products/category/{category}:
    get:
      summary: Get Products By Category
      parameters:
        - name: category
          in: path
          required: true
          type: string
      responses:
        "200":
          description: Successful response
      x-amazon-apigateway-integration:
        uri: http://ec2-44-193-67-192.compute-1.amazonaws.com:3003/api/products/category/{category}
        httpMethod: GET
        requestParameters:
          integration.request.path.category: method.request.path.category
        type: http_proxy
        passthroughBehavior: when_no_match

  /api/products/brand/{brand}:
    get:
      summary: Get Products By Brand
      parameters:
        - name: brand
          in: path
          required: true
          type: string
      responses:
        "200":
          description: Successful response
      x-amazon-apigateway-integration:
        uri: http://ec2-44-193-67-192.compute-1.amazonaws.com:3003/api/products/brand/{brand}
        httpMethod: GET
        requestParameters:
          integration.request.path.brand: method.request.path.brand
        type: http_proxy
        passthroughBehavior: when_no_match

  /api/products/{id}/availability:
    get:
      summary: Check Product Availability
      parameters:
        - name: id
          in: path
          required: true
          type: string
      responses:
        "200":
          description: Successful response
      x-amazon-apigateway-integration:
        uri: http://ec2-44-193-67-192.compute-1.amazonaws.com:3003/api/products/{id}/availability
        httpMethod: GET
        requestParameters:
          integration.request.path.id: method.request.path.id
        type: http_proxy
        passthroughBehavior: when_no_match

  /api/products/create:
    post:
      summary: Create Product
      consumes:
        - application/json
      parameters:
        - in: body
          name: product
          required: true
          schema:
            type: object
            properties:
              name:
                type: string
              description:
                type: string
              price:
                type: number
              compareAtPrice:
                type: number
              costPrice:
                type: number
              sku:
                type: string
              barcode:
                type: string
              quantity:
                type: integer
              isAvailable:
                type: boolean
              weight:
                type: number
              weightUnit:
                type: string
              categoryId:
                type: string
              brandId:
                type: string
              tags:
                type: array
                items:
                  type: string
              images:
                type: array
                items:
                  type: string
              thumbnailImage:
                type: string
              attributes:
                type: object
              metadata:
                type: object
      responses:
        "201":
          description: Product created successfully
      x-amazon-apigateway-integration:
        uri: http://ec2-44-193-67-192.compute-1.amazonaws.com:3003/api/products/create
        httpMethod: POST
        type: http_proxy
        passthroughBehavior: when_no_match
